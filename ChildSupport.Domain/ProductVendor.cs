//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace ChildSupport.Domain
{
    public partial class ProductVendor
    {
        #region Primitive Properties
    
        public virtual int ProductID
        {
            get { return _productID; }
            set
            {
                if (_productID != value)
                {
                    if (Product != null && Product.ProductID != value)
                    {
                        Product = null;
                    }
                    _productID = value;
                }
            }
        }
        private int _productID;
    
        public virtual int BusinessEntityID
        {
            get { return _businessEntityID; }
            set
            {
                if (_businessEntityID != value)
                {
                    if (Vendor != null && Vendor.BusinessEntityID != value)
                    {
                        Vendor = null;
                    }
                    _businessEntityID = value;
                }
            }
        }
        private int _businessEntityID;
    
        public virtual int AverageLeadTime
        {
            get;
            set;
        }
    
        public virtual decimal StandardPrice
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> LastReceiptCost
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> LastReceiptDate
        {
            get;
            set;
        }
    
        public virtual int MinOrderQty
        {
            get;
            set;
        }
    
        public virtual int MaxOrderQty
        {
            get;
            set;
        }
    
        public virtual Nullable<int> OnOrderQty
        {
            get;
            set;
        }
    
        public virtual string UnitMeasureCode
        {
            get { return _unitMeasureCode; }
            set
            {
                if (_unitMeasureCode != value)
                {
                    if (UnitMeasure != null && UnitMeasure.UnitMeasureCode != value)
                    {
                        UnitMeasure = null;
                    }
                    _unitMeasureCode = value;
                }
            }
        }
        private string _unitMeasureCode;
    
        public virtual System.DateTime ModifiedDate
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Product Product
        {
            get { return _product; }
            set
            {
                if (!ReferenceEquals(_product, value))
                {
                    var previousValue = _product;
                    _product = value;
                    FixupProduct(previousValue);
                }
            }
        }
        private Product _product;
    
        public virtual UnitMeasure UnitMeasure
        {
            get { return _unitMeasure; }
            set
            {
                if (!ReferenceEquals(_unitMeasure, value))
                {
                    var previousValue = _unitMeasure;
                    _unitMeasure = value;
                    FixupUnitMeasure(previousValue);
                }
            }
        }
        private UnitMeasure _unitMeasure;
    
        public virtual Vendor Vendor
        {
            get { return _vendor; }
            set
            {
                if (!ReferenceEquals(_vendor, value))
                {
                    var previousValue = _vendor;
                    _vendor = value;
                    FixupVendor(previousValue);
                }
            }
        }
        private Vendor _vendor;

        #endregion
        #region Association Fixup
    
        private void FixupProduct(Product previousValue)
        {
            if (previousValue != null && previousValue.ProductVendors.Contains(this))
            {
                previousValue.ProductVendors.Remove(this);
            }
    
            if (Product != null)
            {
                if (!Product.ProductVendors.Contains(this))
                {
                    Product.ProductVendors.Add(this);
                }
                if (ProductID != Product.ProductID)
                {
                    ProductID = Product.ProductID;
                }
            }
        }
    
        private void FixupUnitMeasure(UnitMeasure previousValue)
        {
            if (previousValue != null && previousValue.ProductVendors.Contains(this))
            {
                previousValue.ProductVendors.Remove(this);
            }
    
            if (UnitMeasure != null)
            {
                if (!UnitMeasure.ProductVendors.Contains(this))
                {
                    UnitMeasure.ProductVendors.Add(this);
                }
                if (UnitMeasureCode != UnitMeasure.UnitMeasureCode)
                {
                    UnitMeasureCode = UnitMeasure.UnitMeasureCode;
                }
            }
        }
    
        private void FixupVendor(Vendor previousValue)
        {
            if (previousValue != null && previousValue.ProductVendors.Contains(this))
            {
                previousValue.ProductVendors.Remove(this);
            }
    
            if (Vendor != null)
            {
                if (!Vendor.ProductVendors.Contains(this))
                {
                    Vendor.ProductVendors.Add(this);
                }
                if (BusinessEntityID != Vendor.BusinessEntityID)
                {
                    BusinessEntityID = Vendor.BusinessEntityID;
                }
            }
        }

        #endregion
    }
}
