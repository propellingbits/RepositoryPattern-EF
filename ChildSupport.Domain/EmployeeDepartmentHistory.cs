//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace ChildSupport.Domain
{
    public partial class EmployeeDepartmentHistory
    {
        #region Primitive Properties
    
        public virtual int BusinessEntityID
        {
            get { return _businessEntityID; }
            set
            {
                if (_businessEntityID != value)
                {
                    if (Employee != null && Employee.BusinessEntityID != value)
                    {
                        Employee = null;
                    }
                    _businessEntityID = value;
                }
            }
        }
        private int _businessEntityID;
    
        public virtual short DepartmentID
        {
            get { return _departmentID; }
            set
            {
                if (_departmentID != value)
                {
                    if (Department != null && Department.DepartmentID != value)
                    {
                        Department = null;
                    }
                    _departmentID = value;
                }
            }
        }
        private short _departmentID;
    
        public virtual byte ShiftID
        {
            get { return _shiftID; }
            set
            {
                if (_shiftID != value)
                {
                    if (Shift != null && Shift.ShiftID != value)
                    {
                        Shift = null;
                    }
                    _shiftID = value;
                }
            }
        }
        private byte _shiftID;
    
        public virtual System.DateTime StartDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> EndDate
        {
            get;
            set;
        }
    
        public virtual System.DateTime ModifiedDate
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Department Department
        {
            get { return _department; }
            set
            {
                if (!ReferenceEquals(_department, value))
                {
                    var previousValue = _department;
                    _department = value;
                    FixupDepartment(previousValue);
                }
            }
        }
        private Department _department;
    
        public virtual Employee Employee
        {
            get { return _employee; }
            set
            {
                if (!ReferenceEquals(_employee, value))
                {
                    var previousValue = _employee;
                    _employee = value;
                    FixupEmployee(previousValue);
                }
            }
        }
        private Employee _employee;
    
        public virtual Shift Shift
        {
            get { return _shift; }
            set
            {
                if (!ReferenceEquals(_shift, value))
                {
                    var previousValue = _shift;
                    _shift = value;
                    FixupShift(previousValue);
                }
            }
        }
        private Shift _shift;

        #endregion
        #region Association Fixup
    
        private void FixupDepartment(Department previousValue)
        {
            if (previousValue != null && previousValue.EmployeeDepartmentHistories.Contains(this))
            {
                previousValue.EmployeeDepartmentHistories.Remove(this);
            }
    
            if (Department != null)
            {
                if (!Department.EmployeeDepartmentHistories.Contains(this))
                {
                    Department.EmployeeDepartmentHistories.Add(this);
                }
                if (DepartmentID != Department.DepartmentID)
                {
                    DepartmentID = Department.DepartmentID;
                }
            }
        }
    
        private void FixupEmployee(Employee previousValue)
        {
            if (previousValue != null && previousValue.EmployeeDepartmentHistories.Contains(this))
            {
                previousValue.EmployeeDepartmentHistories.Remove(this);
            }
    
            if (Employee != null)
            {
                if (!Employee.EmployeeDepartmentHistories.Contains(this))
                {
                    Employee.EmployeeDepartmentHistories.Add(this);
                }
                if (BusinessEntityID != Employee.BusinessEntityID)
                {
                    BusinessEntityID = Employee.BusinessEntityID;
                }
            }
        }
    
        private void FixupShift(Shift previousValue)
        {
            if (previousValue != null && previousValue.EmployeeDepartmentHistories.Contains(this))
            {
                previousValue.EmployeeDepartmentHistories.Remove(this);
            }
    
            if (Shift != null)
            {
                if (!Shift.EmployeeDepartmentHistories.Contains(this))
                {
                    Shift.EmployeeDepartmentHistories.Add(this);
                }
                if (ShiftID != Shift.ShiftID)
                {
                    ShiftID = Shift.ShiftID;
                }
            }
        }

        #endregion
    }
}
